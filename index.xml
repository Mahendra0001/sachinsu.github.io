<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sachin Sunkle</title>
    <link>https://sachinsu.github.io/</link>
    <description>Recent content on Sachin Sunkle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Aug 2020 10:25:04 +0530</lastBuildDate>
    
	<atom:link href="https://sachinsu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Trobleshooting TCP Connection request time outs</title>
      <link>https://sachinsu.github.io/posts/connectiontimeouts/</link>
      <pubDate>Tue, 25 Aug 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/connectiontimeouts/</guid>
      <description>Background I recently had opportunity to support team who has been battling with Intermittent (scary i know :)) issues with TCP connectivity in Production.
Simplified deployment Architecture is as below,
  High Level Architecture   Technology Stack used is Microsoft .NET Framework 4.8 using ODP.NET for Oracle Connectivity (Oracle Server is 8 CPU box). Each of Web Servers in cluster have IIS hosted on it with multiple Applications (Application domains) serving HTTP(s) based traffic.</description>
    </item>
    
    <item>
      <title>Tool to mass DM followers on Twitter in Go</title>
      <link>https://sachinsu.github.io/posts/massdmgolang/</link>
      <pubDate>Sat, 25 Jul 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/massdmgolang/</guid>
      <description>Background I recently came across bounty by Balaji Srinivasan to send Direct Message to all twitter followers. Currently, i do not intend to participate in bounty and this is mere exercise.
This is an attempt to write CLI tool in Golang in response to it.
For detailed requirements, refer here
Approach In Brief,
  CLI should,
 accept arguments like Twitter API Key,Auth token, DM Message Download all followers (with profile details) Rank them by Criteria (e.</description>
    </item>
    
    <item>
      <title>Resources for Online Learning</title>
      <link>https://sachinsu.github.io/links/onlearn/</link>
      <pubDate>Thu, 18 Jun 2020 12:33:07 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/onlearn/</guid>
      <description>Section covering resources for Online learning etc.
 Exploring basics of Computer Science, bit by bit Exploring basics of Distributed Systems Awesome List of Free Learning Resources Collection of online learning resources Complete intro to Linux and CLI  </description>
    </item>
    
    <item>
      <title>Programming Languages - Python</title>
      <link>https://sachinsu.github.io/links/python/</link>
      <pubDate>Sun, 07 Jun 2020 14:13:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/python/</guid>
      <description>Python has become pervasive all throught Data Science be it Machine learning, Deep learning, Data Processing and general purpose tasks like Web Development.
Courses, Trainings  Python for Beginners from MSDN Nice Collection of trainings per level of complexity  Articles  Getting machine learning to production A quick-and-dirty guide on how to install packages for Python  Packages  EasyOCR - supports 40+ languages  Podcasts  Talkpython  </description>
    </item>
    
    <item>
      <title>Web Security Measures in .NET Applications</title>
      <link>https://sachinsu.github.io/posts/websecurity/</link>
      <pubDate>Thu, 04 Jun 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/websecurity/</guid>
      <description>At my current workplace, All Applications are expected to adhere to PCI DSS standards meant for Data protection, Access Regulation and so on. Dedicated SOC Team,consisting of Security analyst who are continously on the prawl to identify breach, conduct periodic auditing of Applications, hardening of Servers.
While all our .NET applications adhere to below guidelines,
 ASP.NET Security Overview Secure Coding Guidelines Security Guidelines by OWASP  We also use tools like Snyk to perform code vulnerability analysis as part of Jenkins driven CI/CD pipeline.</description>
    </item>
    
    <item>
      <title>Is WebAssembly future of Web Development</title>
      <link>https://sachinsu.github.io/posts/webassembly/</link>
      <pubDate>Tue, 02 Jun 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/webassembly/</guid>
      <description>Over the last many years, de-facto language of the Web (specifically front-end) has been Javascript (and variants like Typescript, ECMAScript versions and so on). The Web development has been revolving around HTML+CSS+Javascript trio. It all started with support for Javascript in browsers, followed by addition of XMLHTTP API, Rich DOM Manipulation Support in Javascript. To induce order and apply patterns to Javascript&amp;rsquo;s usage in browsers, numerous frameworks and libraries were introduced like React and Vue among others.</description>
    </item>
    
    <item>
      <title>Using Github Actions for Automated Testing and Deployment</title>
      <link>https://sachinsu.github.io/posts/usinggithubactions/</link>
      <pubDate>Thu, 28 May 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/usinggithubactions/</guid>
      <description>Background The source code of tracfee.com is hosted on Github Private.
At a High level, Tracfee&amp;rsquo;s Architecture involves,
 Single Page Application using VueJS, deployed on Netlify API in Go, deployed on Oracle Cloud  So far, API testing has been automated and we were looking at ways to automate deployment of both UI and API. Steps required to deploy API are less since we are using Docker to run it on VM.</description>
    </item>
    
    <item>
      <title>Artificial Intellgence, Machine Learning</title>
      <link>https://sachinsu.github.io/links/aiml/</link>
      <pubDate>Tue, 26 May 2020 14:13:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/aiml/</guid>
      <description>Useful links related from AI, ML space
Collections  Collection of resources related to Applied ML  Free courses  Fast AI by Jeremy Howard  </description>
    </item>
    
    <item>
      <title>Cloud Tech</title>
      <link>https://sachinsu.github.io/links/cloud/</link>
      <pubDate>Tue, 26 May 2020 14:13:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/cloud/</guid>
      <description>Useful links for deep diving in various Cloud Ecosystems
Articles (GCP)  13 sample architectures to kickstart your Google Cloud journey  Articles (AWS)  What a typical 100% Serverless Architecture looks like in AWS! Automating safe, hands-off deployments Containerizing legacy ASP.NET applications using AWS App2Container (A2C) Replacing web server functionality with serverless services AWS Lambda vs Cloudflare Workers Unbound  Videos, Talks (AWS)  DynamoDB - Advanced Design Patterns DynamoDB - Deep Dive  </description>
    </item>
    
    <item>
      <title>UI/UX</title>
      <link>https://sachinsu.github.io/links/uiux/</link>
      <pubDate>Fri, 08 May 2020 15:07:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/uiux/</guid>
      <description>User Interface / User Experience Design Approach  How Stripe Designs Beautiful Websites Tools for non artistic developers  Articles -Comparing Polling vs WebSockets vs SSE
 A simple, choice-driven chatbot framework with Vanilla Javascript Centering in CSS: A Complete Guide Blog on HTML,fonts, Asynchronous JavaScript  Testing  OSS Load and Functional testing tool Puppeteer - Testing using Headless Chrome Nodejs API  Libraries and Tools  React based Sci-fi style UI Library with Animation and Sound  </description>
    </item>
    
    <item>
      <title>Windows Service with Cancelable Task</title>
      <link>https://sachinsu.github.io/posts/windowsservicecancellabletask/</link>
      <pubDate>Tue, 05 May 2020 12:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/windowsservicecancellabletask/</guid>
      <description>Background Recently, we had requirement wherein a process should,
 Periodically (Poll) or Asynchronously (Pub-sub) listen on incoming requests/messages. The whole process is expected to be long running. Should also implement clean disposal of in-flight requests and subsequent cleanup using something similar to Cancelble Context in Go  The first of the objective is somewhat dependent on mechanism (Pub/sub, Listener), protocol (TCP, HTTP etc.). For the second one, .NET framework (and .</description>
    </item>
    
    <item>
      <title>Optimizing  .NET Code using Benchmarks</title>
      <link>https://sachinsu.github.io/posts/usingbenchmarkdotnet/</link>
      <pubDate>Tue, 05 May 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/usingbenchmarkdotnet/</guid>
      <description>Background Oftentimes, we come across situation where code does not perform as per expectation. What is typically approch to address it,
 Performance Testing - Visual Studio Load Tests or Third party tools like Locust, Vegeta, Gatling etc. Visual Studio Diagnostics Tools Or Use tools like Perfview/dotTrace/dotMemory to diagnose bottlenecks  What if it is possible to Benchmark code for,
 Set of varying parameter(s) Different runtimes (.NET Framework versions, .</description>
    </item>
    
    <item>
      <title>ASP.NET Core - Mind the SameSite HTTP Cookie settings</title>
      <link>https://sachinsu.github.io/posts/samesitecookies/</link>
      <pubDate>Thu, 09 Apr 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/samesitecookies/</guid>
      <description>Background A Web Application, developed in ASP.NET Core (Runtime Version 3.1.100) using Razor Pages and Web API, is expected to be launched from within third-party Web Application in iframe, with complete HTML being rendered.
During the Development, a mock HTML Page was developed to simulate launching of ASP.NET core based Web Application in iframe. Note that this page as well as Application was hosted on same IIS Server and it worked fine.</description>
    </item>
    
    <item>
      <title>Perspectives</title>
      <link>https://sachinsu.github.io/links/perspectives/</link>
      <pubDate>Tue, 18 Feb 2020 12:33:07 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/perspectives/</guid>
      <description>Perspectives Section covering Business, project/programming perspectives
 The New Business of AI (and How It’s Different From Traditional Software) Momentum vs Urgency in Software Project Management Data Science: Reality Doesn&amp;rsquo;t Meet Expectations Quantum computing for the very curious How to Speak (MIT) What questions should systems architects ask before creating anything Basecamp for Personal Project Management Marketing for Engineers - Resources Approach to Exception Handling PRESALES (SE) LEADER? 10 THINGS YOU MUST BE DOING The Tail at Scale Models for integrating data science teams within organizations  </description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>https://sachinsu.github.io/links/tools/</link>
      <pubDate>Tue, 18 Feb 2020 12:33:07 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/tools/</guid>
      <description>General Purpose tools Section covering useful tools for every day activities, Online learning etc.
 OBS Studio - Free and open source software for video recording and live streaming.  </description>
    </item>
    
    <item>
      <title>Using Channels for High performance Producer consumer implementation</title>
      <link>https://sachinsu.github.io/posts/channelsforproducerconsumer/</link>
      <pubDate>Wed, 12 Feb 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/channelsforproducerconsumer/</guid>
      <description>Background Recently, i got involved in assignment where in an application was facing issues with throughput. Expectation is to support more than 500 transactions per second while load testing results were indicating system was experiencing high latency beyond 100+ transactions per second.
This application is developed in .NET Framework + .NET Core and primarily uses Relational Database for persistence and has point to point integration (mainly over HTTP) with internal &amp;amp; external application(s).</description>
    </item>
    
    <item>
      <title>Oracle</title>
      <link>https://sachinsu.github.io/links/oracle/</link>
      <pubDate>Fri, 07 Feb 2020 15:09:50 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/oracle/</guid>
      <description>Oracle Database Performance, Best Practices  Connection Strategies for Database Applications Using High-Speed Data Loading and Rolling Window Operations with Partitioning Designing Applications for Oracle Real-World Performance Best Practices for Extreme Performance with Oracle Data Warehousing Blog on Oracle Performance troubleshooting Using PL/SQL Bulk processing features Auditing tables using Oracle Flashback data archive instead of triggers Bulk processing with PL/SQL Bulk Processing with BULK COLLECT and FORALL Primer on Oracle Partitioning Database Core performance principles - Deck Database insert &amp;amp; referential integrity - Performance On Connection Pools, Cursor Differentiation, and Optimal Ordering Analytical Functions Overview About Materialized Views How to find Slow SQL Using External Tables and Table Clusters in Oracle  Change Data Capture  Nice writeup on options to do CDC in Oracle Database Integrating Oracle and Kafka  Videos  Real world performance video series How to:Analyze AWR Report 5 Minutes Demo: Using Liquibase in SQLcl to version Oracle Database Analytic SQL for Developers - Free course Connection Pooling and SmartDB Oracle Database for Developers - Training How to Create an Execution plan?</description>
    </item>
    
    <item>
      <title>PostgreSQL</title>
      <link>https://sachinsu.github.io/links/postgresql/</link>
      <pubDate>Fri, 07 Feb 2020 15:08:50 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/postgresql/</guid>
      <description>PostgreSQL Links  Using generate_series feature for reporting When Postgres blocks: 7 tips for dealing with locks PostgreSQL - Don&amp;rsquo;t do this Is PostgreSQL good enough? Online event processing by Martin Klepmann PostgreSQL rocks, except when it blocks: Understanding locks Connection handling best practice with PostgreSQL 10 Things I Hate About PostgreSQL Top Tools and Recommendations to Manage Postgres in an Enterprise: Administration, Performance, High Availability, and Migration Using PostgreSQL as Cache and Read Optimization tips Adyen&amp;rsquo;s Use of PostgreSQL  Performance tuning, configuration etc.</description>
    </item>
    
    <item>
      <title>NOSQL</title>
      <link>https://sachinsu.github.io/links/nosql/</link>
      <pubDate>Fri, 07 Feb 2020 15:08:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/nosql/</guid>
      <description>NOSQL Databases Amazon DynamoDB  Data Modelling in DynamoDB Must follow Twitter handle of Rick Houlihan Best Practices for Secondary Indexes with DynamoDB  Apache Cassandra  7 mistakes when using Apache Cassandra  Apache Geode  How Mastercard fights fraud with Apache Geode  Apache Pinot  Pinot- Enabling Real-time Analytics @ linkedin  Redis  Redis High Availability Redis Cluster KeyDB is a high performance fork of Redis with a focus on multithreading, memory efficiency, and high throughput.</description>
    </item>
    
    <item>
      <title>MySQL</title>
      <link>https://sachinsu.github.io/links/mysql/</link>
      <pubDate>Fri, 07 Feb 2020 15:07:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/mysql/</guid>
      <description>MySQL Links  Query analytics for the day-to-day developer with MySQL 8.0 Schema Change Management for MySQL Temporal Data tables in MariaDB MySQL 8.0 Indexes, Histograms, and Other Ways to Speed Up Your Queries  Vitess,a Distributed MySQL  Massively scaling MySQL database  </description>
    </item>
    
    <item>
      <title>Databases</title>
      <link>https://sachinsu.github.io/links/databases/</link>
      <pubDate>Fri, 07 Feb 2020 15:02:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/databases/</guid>
      <description>Database Knowledge base around general database related topics.
General Links  Modern SQL in databases Eventual consistency by Werner Vogels Amazon Aurora ascendant: How we designed a cloud-native relational database - All Things Distributed Options for scaling from 1 to 100,000 tenants Amazon Aurora: design considerations for high throughput cloud-native relational databases | the morning paper NOSQL - Key Points Criteria for Choosing Data store Building Real Time Analytics APIs at Scale Streaming Database Changes with Debezium Why you should pick strong consistency, whenever possible Change Data Capture, Outbox and Event Sourcing Using Streamsets for CDC From Oracle to Other destinations Transactions in Google Spanner Things I Wished More Developers Knew About Databases MySQL Sharding at Quora Interactive Book about SQL SQL Interview Questions Hadoop or Laptop The lightweight, distributed relational database built on SQLite Optimizing SQL Queries, Regardless of Platform How to do Data Modelling the right way Primer on Database Replication Connection pool sizing for databases Some SQL tricks from Application DBA Using Outer/Cross Apply in SQL  Services and Offerings Data Analytics  List of Computational Data Analysis Workflow Systems Data Visualization framework for Python Create a Serverless Data Lake on AWS and Migrate your On-Prem Data to it Analytics Academy by Segment Analytics Whitepapers by Sisense SQL Analytics Training A Beginner&amp;rsquo;s Guide to Data Engineering - 3-part series Chart types and its usage Rudder - Open source Customer Data Infrastructure DuckDB - Embeddable OLAP DBMS Data Lake - Solution Patterns Catalog of Widgets for Data Visualization  ETL, Evolutionary Practices  Database CI/CD practices using Redshift Awesome Apache Airflow A Python library for building data applications: ETL, ML, Data Pipelines, and more.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://sachinsu.github.io/projects/</link>
      <pubDate>Fri, 07 Feb 2020 14:29:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/projects/</guid>
      <description>Below are some of my project(s),
  Tracfee.com One stop for Tutors to manage students, track fees. Developed as SPA in VueJS + Quasar using API in Golang, Oracle Database and hosted on Netlify.
  RSS APP RSS Reader app, to be used in lieu of Google Reader. Developed in Python with MongoDB as database.
  </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://sachinsu.github.io/about/</link>
      <pubDate>Fri, 07 Feb 2020 14:28:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/about/</guid>
      <description>I am a coder, currently working at @worldlineglobal. This is my personal site where i share helpful content (gathered or authored) on Technology (and other topics).
I appreciate any ideas/suggestions you have on how I can improve this site.</description>
    </item>
    
    <item>
      <title>Programming Languages - .NET</title>
      <link>https://sachinsu.github.io/links/dotnet/</link>
      <pubDate>Fri, 07 Feb 2020 14:14:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/dotnet/</guid>
      <description>Microsoft .NET Platform where i have spent most time till now.
General Links  What is .NET? by Scott Hanselman Async in Depth Using Async/Await in WCF or ASMX with AsyncEx .NET Presentations - Events in a Box Building Microservices in .NET Oracle DB &amp;amp; .NET - Optimizing Real-World Performance with Static Connection Pools Clean Code concepts and tools adapted for .NET Multiple ways how to limit parallel tasks processing Parallel programming in .</description>
    </item>
    
    <item>
      <title>Programming Languages - Go</title>
      <link>https://sachinsu.github.io/links/go/</link>
      <pubDate>Fri, 07 Feb 2020 14:13:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/go/</guid>
      <description>Go Language My current Favourite Language
Articles, E-books  High performance GO Workshop Thoughts on Go performance optimization Effective Go Handling 1M websockets connections in Go  Notes on Go language Standard Go Project Layout 10 things you (probably) don&amp;rsquo;t know about Go Useful patterns in Go Interesting ways of using Go channels How i writer web services in Go Embed static file(s) in Go Executable and expose over HTTP Go Useful patterns by Roberto Clapis Strategies for Working with Message Queues Continuous build &amp;amp; Testing using Go Convey Why American Express chose Go Thoughts on Performance Optimizations in Go by Damian Gryski Quick list of performance improvement targets in Go 10 things you probably don&amp;rsquo;t know about Go Learn Go with test-driven development Cancellable Pipelines in Go Running Go binary in Docker Go for Cloud - Tips and Techniques Why and what to instrument in Go Web Apps Continuous Profiling of Go programs How I write HTTP services after eight years Go Concurrency - Singleflight, Bounded concurrency, Weighted bounded concurrency Why you should be using errgroup withcontext in Golang WebAssembly in Go gRPC in Go Go: Discovery of the Trace Package  Libraries, Tools  Right way to check weather Golang style guide by Uber ORM to Model and Traversal of Data as a Graph structure  Task queues  Machinery - Asynchronous task queue/job queue Bleve - Full text Search Engine Event Sourcing, pub/sub using AMQP/SQL/Channels Hydra - OAuth 2.</description>
    </item>
    
    <item>
      <title>Programming - Testing</title>
      <link>https://sachinsu.github.io/links/testing/</link>
      <pubDate>Fri, 07 Feb 2020 14:05:07 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/testing/</guid>
      <description>Testing Links  HTTP(S) benchmark tools, testing/debugging, &amp;amp; restAPI (RESTful)  </description>
    </item>
    
    <item>
      <title>Programming Languages</title>
      <link>https://sachinsu.github.io/links/planguages/</link>
      <pubDate>Fri, 07 Feb 2020 13:38:46 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/planguages/</guid>
      <description>Programming Languages Links  Hello world in every Programming Language  General  You are not Google Production Launch Checklist Things I Learnt The Hard Way in 30 Years of Software Development A collection of (mostly) technical things every software developer should know  Startup idea Checklist System Design Primer Developer Roadmaps Why our team cancelled our move to microservices How Does HTTPS Work? RSA Encryption Explained How do you cut a monolith in half?</description>
    </item>
    
    <item>
      <title>Programming</title>
      <link>https://sachinsu.github.io/links/programming/</link>
      <pubDate>Fri, 07 Feb 2020 12:33:07 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/programming/</guid>
      <description>Programming Links covering programming concepts, Architectural Approaches, Cases Studies etc.
Architectural Case studies  Temenos Serverless banking at Scale @ AWS using CQRS leveraging RDS and DynamoDB Temenos @ AWS Architecture Diagrams Architecture for Generations Uber&amp;rsquo;s Domain-Oriented Microservice Architecture  Strategies/Approaches  Rob Pike&amp;rsquo;s 5 Rules of Programming Strategies for Working with Message Queues Break Monolith into Microservices Distributed architecture concepts I learned while building a large payments system Video: Developing Asynchronous Microservices • Chris Richardson Collection of Software development Videos Slides Managing Data Consistency in Microservices Architecture  Reliable Microservices Data Exchange With the Outbox Pattern Scaling to 100k Users Monolith - Modular Approach You don&amp;rsquo;t need Microservices Event Modelling - Approach Ready for changes with Hexagonal Architecture How to fix Overloaded Web server How gov.</description>
    </item>
    
    <item>
      <title>Useful Links</title>
      <link>https://sachinsu.github.io/links/home/</link>
      <pubDate>Fri, 07 Feb 2020 11:38:27 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/links/home/</guid>
      <description>Below is list of Curated links for various technical topics,  Awesome - de-facto repository covering wide range of technical topics. Online Learning Perspectives Programming Concepts, Strategies etc. Testing UI/UX Languages  Go .NET/C# Python   Databases  MySQL Oracle PostgreSQL NoSQL   Cloud Tech AI, Machine Learning  Machine Learning   General Purpose tools  Must follow Community Sites  Hacker news Lobsters  Miscellaneous  Open Source alternative tools  </description>
    </item>
    
    <item>
      <title>Using .NET standard Assembly in .NET core and .NET Framework</title>
      <link>https://sachinsu.github.io/posts/dotnetstandard/</link>
      <pubDate>Fri, 07 Feb 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/dotnetstandard/</guid>
      <description>Background One of the key project(s) at my current organization is developed on .NET 4.6.1. It is developed as Modular Monolith. As part of it&amp;rsquo;s functionality, it supports different channels like Mobiles, Terminals and Web. For the Web channel, there was need to develop a Web application with,
 High availability Lightweight, High throughput (Need to support few thousand(s) active users)  Accordingly, we have been exploring developing this Web Application in .</description>
    </item>
    
  </channel>
</rss>